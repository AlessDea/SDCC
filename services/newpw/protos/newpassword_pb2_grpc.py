# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import protos.newpassword_pb2 as newpassword__pb2


class PasswordStub(object):
    """The  service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNewNumericPassword = channel.unary_unary(
                '/newpw.Password/GetNewNumericPassword',
                request_serializer=newpassword__pb2.NewPasswordRequest.SerializeToString,
                response_deserializer=newpassword__pb2.NewPasswordReply.FromString,
                )
        self.GetNewLowerPassword = channel.unary_unary(
                '/newpw.Password/GetNewLowerPassword',
                request_serializer=newpassword__pb2.NewPasswordRequest.SerializeToString,
                response_deserializer=newpassword__pb2.NewPasswordReply.FromString,
                )
        self.GetNewUpperPassword = channel.unary_unary(
                '/newpw.Password/GetNewUpperPassword',
                request_serializer=newpassword__pb2.NewPasswordRequest.SerializeToString,
                response_deserializer=newpassword__pb2.NewPasswordReply.FromString,
                )
        self.GetNewAlphaNumericPassword = channel.unary_unary(
                '/newpw.Password/GetNewAlphaNumericPassword',
                request_serializer=newpassword__pb2.NewPasswordRequest.SerializeToString,
                response_deserializer=newpassword__pb2.NewPasswordReply.FromString,
                )


class PasswordServicer(object):
    """The  service definition.
    """

    def GetNewNumericPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewLowerPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewUpperPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewAlphaNumericPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PasswordServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNewNumericPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewNumericPassword,
                    request_deserializer=newpassword__pb2.NewPasswordRequest.FromString,
                    response_serializer=newpassword__pb2.NewPasswordReply.SerializeToString,
            ),
            'GetNewLowerPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewLowerPassword,
                    request_deserializer=newpassword__pb2.NewPasswordRequest.FromString,
                    response_serializer=newpassword__pb2.NewPasswordReply.SerializeToString,
            ),
            'GetNewUpperPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewUpperPassword,
                    request_deserializer=newpassword__pb2.NewPasswordRequest.FromString,
                    response_serializer=newpassword__pb2.NewPasswordReply.SerializeToString,
            ),
            'GetNewAlphaNumericPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewAlphaNumericPassword,
                    request_deserializer=newpassword__pb2.NewPasswordRequest.FromString,
                    response_serializer=newpassword__pb2.NewPasswordReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'newpw.Password', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Password(object):
    """The  service definition.
    """

    @staticmethod
    def GetNewNumericPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/newpw.Password/GetNewNumericPassword',
            newpassword__pb2.NewPasswordRequest.SerializeToString,
            newpassword__pb2.NewPasswordReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewLowerPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/newpw.Password/GetNewLowerPassword',
            newpassword__pb2.NewPasswordRequest.SerializeToString,
            newpassword__pb2.NewPasswordReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewUpperPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/newpw.Password/GetNewUpperPassword',
            newpassword__pb2.NewPasswordRequest.SerializeToString,
            newpassword__pb2.NewPasswordReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewAlphaNumericPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/newpw.Password/GetNewAlphaNumericPassword',
            newpassword__pb2.NewPasswordRequest.SerializeToString,
            newpassword__pb2.NewPasswordReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
