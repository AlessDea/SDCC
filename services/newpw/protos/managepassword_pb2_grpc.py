# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import protos.managepassword_pb2 as managepassword__pb2


class SaverStub(object):
    """The  service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SavePassword = channel.unary_unary(
                '/managepw.Saver/SavePassword',
                request_serializer=managepassword__pb2.SavePasswordRequest.SerializeToString,
                response_deserializer=managepassword__pb2.SavePasswordReply.FromString,
                )
        self.doList = channel.unary_unary(
                '/managepw.Saver/doList',
                request_serializer=managepassword__pb2.ListPasswordRequest.SerializeToString,
                response_deserializer=managepassword__pb2.ListPasswordReply.FromString,
                )


class SaverServicer(object):
    """The  service definition.
    """

    def SavePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SaverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SavePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.SavePassword,
                    request_deserializer=managepassword__pb2.SavePasswordRequest.FromString,
                    response_serializer=managepassword__pb2.SavePasswordReply.SerializeToString,
            ),
            'doList': grpc.unary_unary_rpc_method_handler(
                    servicer.doList,
                    request_deserializer=managepassword__pb2.ListPasswordRequest.FromString,
                    response_serializer=managepassword__pb2.ListPasswordReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'managepw.Saver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Saver(object):
    """The  service definition.
    """

    @staticmethod
    def SavePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/managepw.Saver/SavePassword',
            managepassword__pb2.SavePasswordRequest.SerializeToString,
            managepassword__pb2.SavePasswordReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def doList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/managepw.Saver/doList',
            managepassword__pb2.ListPasswordRequest.SerializeToString,
            managepassword__pb2.ListPasswordReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
